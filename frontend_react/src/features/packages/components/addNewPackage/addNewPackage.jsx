import React, { useState } from "react";
import "./addNewPackage.css";

import { PackageModel } from "../../../../firebase/lib/features/package/packages.model.js";

export default function AddNewPackage({ onSave, onCancel }) {
  const [form, setForm] = useState({
    PackageId: "",
    PackageName: "",
    PackageType: "",
    Description: "",
    Duration: "",
    Price: "",
    Status: "active",
    NumberOfSession: "",
    Discount: "",
    StartDayDiscount: "",
    EndDayDiscount: "",
    UsageCondition: "",
  });

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setLoading(true);

    try {
      // Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ submit
      const dataToSubmit = { ...form };

      // Ki·ªÉm tra n·∫øu c√≥ nh·∫≠p Discount
      const hasDiscount = dataToSubmit.Discount && parseFloat(dataToSubmit.Discount) > 0;

      if (hasDiscount) {
        // N·∫øu c√≥ gi·∫£m gi√°, b·∫Øt bu·ªôc ph·∫£i c√≥ ng√†y b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c
        if (!dataToSubmit.StartDayDiscount || !dataToSubmit.EndDayDiscount) {
          throw new Error("Vui l√≤ng nh·∫≠p ng√†y b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c gi·∫£m gi√°.");
        }
        // Ki·ªÉm tra ng√†y h·ª£p l·ªá
        if (new Date(dataToSubmit.EndDayDiscount) < new Date(dataToSubmit.StartDayDiscount)) {
          throw new Error("Ng√†y k·∫øt th√∫c gi·∫£m gi√° ph·∫£i sau ng√†y b·∫Øt ƒë·∫ßu.");
        }
      } else {
        // N·∫øu kh√¥ng c√≥ gi·∫£m gi√°, x√≥a c√°c tr∆∞·ªùng li√™n quan
        delete dataToSubmit.Discount;
        delete dataToSubmit.StartDayDiscount;
        delete dataToSubmit.EndDayDiscount;
        delete dataToSubmit.UsageCondition;
      }

      // Lo·∫°i b·ªè c√°c tr∆∞·ªùng r·ªóng
      Object.keys(dataToSubmit).forEach(key => {
        if (dataToSubmit[key] === "" || dataToSubmit[key] === null || dataToSubmit[key] === undefined) {
          delete dataToSubmit[key];
        }
      });

      console.log("üì¶ Data to submit:", dataToSubmit);

      const result = await PackageModel.create(dataToSubmit);
      console.log("‚úÖ Package created:", result);
      
      alert("‚úÖ G√≥i t·∫≠p ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
      if (onSave) onSave(result);
    } catch (err) {
      console.error("‚ùå Error:", err);
      setError(err.message || "C√≥ l·ªói x·∫£y ra khi th√™m g√≥i t·∫≠p.");
    } finally {
      setLoading(false);
    }
  };

  // Ki·ªÉm tra xem tr∆∞·ªùng Discount c√≥ gi√° tr·ªã h·ª£p l·ªá hay kh√¥ng
  const isDiscountEnabled = form.Discount && parseFloat(form.Discount) > 0;

  return (
    <div className="add-package-container">
      <h2>Th√™m g√≥i t·∫≠p m·ªõi</h2>

      <form className="add-package-form" onSubmit={handleSubmit}>
        <div className="form-grid">
          <div className="form-group">
            <label>M√£ g√≥i <span className="required">*</span></label>
            <input
              type="text"
              name="PackageId"
              value={form.PackageId}
              onChange={handleChange}
              required
              placeholder="Nh·∫≠p m√£ g√≥i (v√≠ d·ª•: PK001)"
            />
          </div>

          <div className="form-group">
            <label>T√™n g√≥i <span className="required">*</span></label>
            <input
              type="text"
              name="PackageName"
              value={form.PackageName}
              onChange={handleChange}
              required
              placeholder="Nh·∫≠p t√™n g√≥i (v√≠ d·ª•: G√≥i c∆° b·∫£n 1 th√°ng)"
            />
          </div>

          <div className="form-group">
            <label>Lo·∫°i g√≥i <span className="required">*</span></label>
            <select
              name="PackageType"
              value={form.PackageType}
              onChange={handleChange}
              required
            >
              <option value="">-- Ch·ªçn lo·∫°i --</option>
              <option value="Personal">C√° nh√¢n</option>
              <option value="PT">Hu·∫•n luy·ªán vi√™n c√° nh√¢n</option>
              <option value="Trial">Th·ª≠ nghi·ªám</option>
              <option value="Promotional">Khuy·∫øn m√£i</option>
            </select>
          </div>

          <div className="form-group">
            <label>Th·ªùi h·∫°n (ng√†y) <span className="required">*</span></label>
            <input
              type="number"
              name="Duration"
              value={form.Duration}
              onChange={handleChange}
              required
              min="1"
              placeholder="Nh·∫≠p s·ªë ng√†y (v√≠ d·ª•: 30)"
            />
          </div>

          <div className="form-group">
            <label>Gi√° (VNƒê) <span className="required">*</span></label>
            <input
              type="number"
              name="Price"
              value={form.Price}
              onChange={handleChange}
              required
              min="0"
              placeholder="Nh·∫≠p gi√° (v√≠ d·ª•: 500000)"
            />
          </div>

          <div className="form-group">
            <label>Tr·∫°ng th√°i <span className="required">*</span></label>
            <select
              name="Status"
              value={form.Status}
              onChange={handleChange}
              required
            >
              <option value="active">K√≠ch ho·∫°t</option>
              <option value="inactive">Ng·ª´ng</option>
            </select>
          </div>

          <div className="form-group">
            <label>S·ªë bu·ªïi t·∫≠p</label>
            <input
              type="number"
              name="NumberOfSession"
              value={form.NumberOfSession}
              onChange={handleChange}
              min="0"
              placeholder="Nh·∫≠p s·ªë bu·ªïi (n·∫øu c√≥, v√≠ d·ª•: 12)"
            />
          </div>

          <div className="form-group">
            <label>Gi·∫£m gi√° (%)</label>
            <input
              type="number"
              name="Discount"
              value={form.Discount}
              onChange={handleChange}
              min="0"
              max="100"
              placeholder="Nh·∫≠p % gi·∫£m gi√° (0‚Äì100)"
            />
          </div>

          <div className="form-group">
            <label>B·∫Øt ƒë·∫ßu gi·∫£m gi√°</label>
            <input
              type="date"
              name="StartDayDiscount"
              value={form.StartDayDiscount}
              onChange={handleChange}
              disabled={!isDiscountEnabled}
            />
          </div>

          <div className="form-group">
            <label>K·∫øt th√∫c gi·∫£m gi√°</label>
            <input
              type="date"
              name="EndDayDiscount"
              value={form.EndDayDiscount}
              onChange={handleChange}
              disabled={!isDiscountEnabled}
            />
          </div>

          <div className="form-group full">
            <label>ƒêi·ªÅu ki·ªán s·ª≠ d·ª•ng</label>
            <textarea
              name="UsageCondition"
              value={form.UsageCondition}
              onChange={handleChange}
              rows="3"
              disabled={!isDiscountEnabled}
              placeholder="Nh·∫≠p ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng (n·∫øu c√≥)"
            ></textarea>
          </div>

          <div className="form-group full">
            <label>M√¥ t·∫£</label>
            <textarea
              name="Description"
              value={form.Description}
              onChange={handleChange}
              rows="3"
              placeholder="Nh·∫≠p m√¥ t·∫£ g√≥i t·∫≠p"
            ></textarea>
          </div>
        </div>

        {error && <p className="error-text">{error}</p>}

        <div className="form-actions">
          <button type="submit" className="save-btn" disabled={loading}>
            {loading ? "ƒêang l∆∞u..." : "L∆∞u"}
          </button>
          <button type="button" className="cancel-btn" onClick={onCancel}>
            H·ªßy
          </button>
        </div>
      </form>
    </div>
  );
}