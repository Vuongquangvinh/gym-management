/**
 * ================================================
 * QUICK TEST SCRIPT
 * ================================================
 * File n√†y ƒë·ªÉ test nhanh c√°c t√≠nh nƒÉng Package-User
 * Ch·∫°y: node src/tests/quickTest.js (sau khi build)
 */

import { PackageModel } from "../firebase/lib/features/package/packages.model.js";
import UserModel from "../firebase/lib/features/user/user.model.js";

async function quickTest() {
  console.log("üß™ B·∫ÆT ƒê·∫¶U QUICK TEST\n");

  try {
    // Test 1: T·∫°o package
    console.log("üìù Test 1: T·∫°o package m·ªõi...");
    const packageData = {
      PackageId: "",
      PackageName: "G√≥i Test 3 Th√°ng",
      PackageType: "time",
      Description: "G√≥i test 3 th√°ng kh√¥ng gi·ªõi h·∫°n",
      Duration: 90,
      Price: 2000000,
      Status: "active",
      Discount: 10,
      StartDayDiscount: new Date("2025-01-01"),
      EndDayDiscount: new Date("2025-12-31"),
      UsageCondition: "T·∫≠p kh√¥ng gi·ªõi h·∫°n",
    };

    const newPackage = await PackageModel.create(packageData);
    console.log("‚úÖ Package created:", newPackage.id);

    // Test 2: L·∫•y package v·ª´a t·∫°o
    console.log("\nüìù Test 2: L·∫•y package v·ª´a t·∫°o...");
    const retrievedPackage = await PackageModel.getById(newPackage.id);
    console.log("‚úÖ Package retrieved:", retrievedPackage.PackageName);

    // Test 3: T√≠nh gi√° sau discount
    console.log("\nüìù Test 3: T√≠nh gi√° sau discount...");
    const finalPrice = retrievedPackage.getFinalPrice();
    console.log("Gi√° g·ªëc:", retrievedPackage.Price);
    console.log("Discount:", retrievedPackage.Discount + "%");
    console.log("‚úÖ Gi√° cu·ªëi:", finalPrice);

    // Test 4: T√≠nh ng√†y h·∫øt h·∫°n
    console.log("\nüìù Test 4: T√≠nh ng√†y h·∫øt h·∫°n...");
    const endDate = retrievedPackage.calculateEndDate(new Date());
    console.log("‚úÖ Ng√†y h·∫øt h·∫°n:", endDate.toLocaleDateString("vi-VN"));

    // Test 5: L·∫•y t·∫•t c·∫£ packages
    console.log("\nüìù Test 5: L·∫•y danh s√°ch packages...");
    const allPackages = await PackageModel.getAll({ status: "active" });
    console.log("‚úÖ T·ªïng s·ªë packages active:", allPackages.length);

    // Test 6: User ƒëƒÉng k√Ω package (c·∫ßn c√≥ user trong DB)
    console.log(
      "\nüìù Test 6: Test user registration (skip n·∫øu ch∆∞a c√≥ user)..."
    );
    // const testUser = await UserModel.getByPhoneNumber("0987654321");
    // if (testUser) {
    //   const result = await testUser.registerPackage(newPackage.id);
    //   console.log("‚úÖ Registration result:", result.message);
    //   console.log("Package end date:", result.endDate);
    // } else {
    //   console.log("‚ö†Ô∏è Skip - Ch∆∞a c√≥ user test");
    // }

    console.log("\nüéâ T·∫§T C·∫¢ TEST PASSED!");
    console.log("\nüìä T√≥m t·∫Øt:");
    console.log("- Package ID:", newPackage.id);
    console.log("- Package Name:", retrievedPackage.PackageName);
    console.log("- Duration:", retrievedPackage.Duration, "ng√†y");
    console.log("- Final Price:", finalPrice.toLocaleString("vi-VN"), "‚Ç´");
    console.log("- End Date:", endDate.toLocaleDateString("vi-VN"));

    return {
      success: true,
      packageId: newPackage.id,
    };
  } catch (error) {
    console.error("\n‚ùå TEST FAILED:", error.message);
    console.error(error);
    return {
      success: false,
      error: error.message,
    };
  }
}

// Run test (for browser environment)
if (typeof window !== "undefined") {
  // Running in browser
  quickTest().then((result) => {
    if (result.success) {
      console.log("\n‚úÖ QUICK TEST HO√ÄN T·∫§T");
    } else {
      console.log("\n‚ùå QUICK TEST TH·∫§T B·∫†I");
    }
  });
}

export default quickTest;
